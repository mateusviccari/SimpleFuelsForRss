//Matches all engines that use default LiquidFuel + Oxidizer
//Leaves out procedural SRB from procedural parts, it will be treated with a separate patch
@PART[*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],~name[proceduralTankSRB]]:FOR[SimpleFuelsRss]
{
	origIspVac = #$/MODULE[ModuleEngines*]/atmosphereCurve/key,0[1, ]$
	origIspSL = #$/MODULE[ModuleEngines*]/atmosphereCurve/key,1[1, ]$

	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = simpleFuelsRssEngineModeSRB
		switcherDescription = SRB Engine mode
		switcherDescriptionPlural = SRB Engine modes
		affectDragCubes = false
		affectFARVoxels = false
		switchInFlight = false
		advancedTweakablesOnly = false
		uiGroupName = simpleFuelsRssEngineModesSRB
		uiGroupDisplayName = SRB Engine modes

		SUBTYPE
		{
			name = PBAN
			title = PBAN
			addedMass = 0
			addedCost = 0
			primaryColor = #b7854e
			secondaryColor = #b7854e

			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEngines*
				}
				DATA
				{
					maxThrust = #$/MODULE[ModuleEngines*]/maxThrust$
					PROPELLANT
					{
						name = PBAN
						ratio = 1
						DrawGauge = True
					}
					atmosphereCurve
					{
						key = 0 6662 //Placeholder, will be changed later
						key = 1 6661 //Placeholder, will be changed later
					}
				}
			}
		}

		SUBTYPE
		{
			name = HTPB
			title = HTPB
			addedMass = 0
			addedCost = 0
			primaryColor = #7da346
			secondaryColor = #7da346
			upgradeRequired = ENGINE_SRB_HTPB

			MODULE
			{
				IDENTIFIER
				{
					name = ModuleEngines*
				}
				DATA
				{
					maxThrust = #$/MODULE[ModuleEngines*]/maxThrust$
					PROPELLANT
					{
						name = HTPB
						ratio = 1
						DrawGauge = True
					}
					atmosphereCurve
					{
						key = 0 6662 //Placeholder, will be changed later
						key = 1 6661 //Placeholder, will be changed later
					}
				}
			}
		}
	}
}

//Applies the original engine ISP on the new variants
@PART[*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]]]:FOR[SimpleFuelsRss]:NEEDS[!zzz_SMURFF] {
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[simpleFuelsRssEngineModeSRB]] {
		@SUBTYPE[*],* {
			@MODULE,0 {
				@DATA,1 {
					@atmosphereCurve {
						@key,0[1, ] = #$/origIspVac$
						@key,1[1, ] = #$/origIspSL$
					}
				}
			}
		}
	}
}
@PART[*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]],~name[proceduralTankSRB]]:AFTER[zzz_SMURFF] {
	//Reapplies ISP since SMURFF makes some changes on SRB ISPs
	%origIspVac = #$/MODULE[ModuleEngines*]/atmosphereCurve/key,0[1, ]$
	%origIspSL = #$/MODULE[ModuleEngines*]/atmosphereCurve/key,1[1, ]$

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[simpleFuelsRssEngineModeSRB]] {
		@SUBTYPE[*],* {
			@MODULE,0 {
				@DATA,1 {
					@atmosphereCurve {
						@key,0[1, ] = #$/origIspVac$
						@key,1[1, ] = #$/origIspSL$
					}
				}
			}
		}
	}
}

//Multiplies the engine ISP to make them viable in RSS and changes maxThrust to give them some variation
@PART[*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]]]:FOR[SimpleFuelsRss]:NEEDS[!zzz_SMURFF] {
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[simpleFuelsRssEngineModeSRB]] {
		@SUBTYPE[PBAN] {
			@MODULE,0 {
				@DATA,1 {
					@maxThrust *= 2.3
					@atmosphereCurve {
						@key,0[1, ] *= 2.112
						@key,1[1, ] *= 2.112
					}
				}
			}
		}

		@SUBTYPE[HTPB] {
			@MODULE,0 {
				@DATA,1 {
					@maxThrust *= 2.2
					@atmosphereCurve {
						@key,0[1, ] *= 2.1695999999999995
						@key,1[1, ] *= 2.1695999999999995
					}
				}
			}
		}
	}
}
@PART[*]:HAS[@MODULE[ModuleEngines*]:HAS[@PROPELLANT[SolidFuel]]]:AFTER[zzz_SMURFF] {
	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[simpleFuelsRssEngineModeSRB]] {
		@SUBTYPE[PBAN] {
			@MODULE,0 {
				@DATA,1 {
					@maxThrust *= 1
					@atmosphereCurve {
						@key,0[1, ] *= 1
						@key,1[1, ] *= 1
					}
				}
			}
		}

		@SUBTYPE[HTPB] {
			@MODULE,0 {
				@DATA,1 {
					@maxThrust *= 0.9565217391304349
					@atmosphereCurve {
						@key,0[1, ] *= 1.027272727272727
						@key,1[1, ] *= 1.027272727272727
					}
				}
			}
		}
	}
}